{"version":3,"sources":["App.js","registerServiceWorker.js","index.js","logo.svg"],"names":["App","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","displayValue","waitingForOperator","operator","value","inputDot","bind","assertThisInitialized","clearDisplay","showPercent","changeSign","setState","digit","_this$state","String","_this$state2","indexOf","charAt","substr","parseFloat","nextoperator","_this$state3","nextValue","newValue","+","prevValue","-","*","/","=","_this2","butn","backgroundColor","color","butn1","react_default","a","createElement","className","src","logo","alt","type","id","cellspacing","cellpadding","style","onClick","performOperation","inputDigit","width","Component","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","catch","error","ReactDOM","render","src_App_0","document","getElementById","URL","process","origin","addEventListener","concat","fetch","response","status","headers","get","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker","module","exports","__webpack_require__","p"],"mappings":"sRAwLeA,qBAlLX,SAAAA,EAAYC,GAAM,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAL,IACdE,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAH,GAAAQ,KAAAH,KAAMJ,KAOVQ,MAAQ,CACVC,aAAc,IACdC,oBAAoB,EACpBC,SAAU,KACVC,MAAO,MAVDX,EAAKY,SAASZ,EAAKY,SAASC,KAAdZ,OAAAa,EAAA,EAAAb,QAAAa,EAAA,EAAAb,CAAAD,KACdA,EAAKe,aAAaf,EAAKe,aAAaF,KAAlBZ,OAAAa,EAAA,EAAAb,QAAAa,EAAA,EAAAb,CAAAD,KAClBA,EAAKgB,YAAYhB,EAAKgB,YAAYH,KAAjBZ,OAAAa,EAAA,EAAAb,QAAAa,EAAA,EAAAb,CAAAD,KACjBA,EAAKiB,WAAWjB,EAAKiB,WAAWJ,KAAhBZ,OAAAa,EAAA,EAAAb,QAAAa,EAAA,EAAAb,CAAAD,KALFA,8EAiBrBG,KAAKe,SAAS,CACbV,aAAa,yCAGJW,GACX,IAAAC,EAC2CjB,KAAKI,MAAvCC,EADTY,EACSZ,aADTY,EACuBX,mBAIrBN,KAAKe,SAAS,CACbV,aAAea,OAAOF,GACtBV,oBAAoB,IAIrBN,KAAKe,SAAS,CACbV,aAAgC,MAAjBA,EAAuBa,OAAOF,GAASX,EAAaW,uCAK5D,IAAAG,EACkCnB,KAAKI,MAAxCC,EADCc,EACDd,aADCc,EACcb,mBAGtBN,KAAKe,SAAS,CACbV,aAAc,IACdC,oBAAoB,KAIiB,IAA9BD,EAAae,QAAQ,MAE7BpB,KAAKe,SAAS,CACbV,aAAeA,EAAe,2CAKrB,IACJA,EAAcL,KAAKI,MAAnBC,aACPL,KAAKe,SAAS,CACbV,aAAyC,MAA1BA,EAAagB,OAAO,GAAYhB,EAAaiB,OAAO,GAAK,IAAIjB,0CAI9E,IACOA,EAAcL,KAAKI,MAAnBC,aACAG,EAAQe,WAAWlB,GACzBL,KAAKe,SAAS,CACbV,aAAeG,EAAM,+CAGNgB,GACjB,IAAAC,EACwCzB,KAAKI,MAApCC,EADToB,EACSpB,aAAcE,EADvBkB,EACuBlB,SAASC,EADhCiB,EACgCjB,MACzBkB,EAAYH,WAAWlB,GAW7B,GAAU,MAAPG,EAEFR,KAAKe,SAAS,CACbP,MAAMkB,SAGA,GAAGnB,EACX,CAEC,IACMoB,EApBY,CAClBC,IAAI,SAACC,EAAUH,GAAX,OAAyBG,EAAUH,GACvCI,IAAI,SAACD,EAAUH,GAAX,OAAyBG,EAAUH,GACvCK,IAAI,SAACF,EAAUH,GAAX,OAAyBG,EAAUH,GACvCM,IAAI,SAACH,EAAUH,GAAX,OAAyBG,EAAUH,GACvCO,IAAI,SAACJ,EAAUH,GAAX,OAAyBA,IAeDnB,GADPC,GAAS,EACqBkB,GAEnD1B,KAAKe,SAAS,CACbP,MAAMmB,EACNtB,aAAaa,OAAOS,KAGtB3B,KAAKe,SAAS,CACbT,oBAAqB,EACrBC,SAASiB,qCAMA,IAAAU,EAAAlC,KAIDmC,EAAK,CACPC,gBAAgB,UAChBC,MAAQ,QAERC,EAAQ,CACRF,gBAAgB,WAOpB,OACEG,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACbH,EAAAC,EAAAC,cAAA,UAAQC,UAAU,cAChBH,EAAAC,EAAAC,cAAA,OAAKE,IAAKC,IAAMF,UAAU,WAAWG,IAAI,SACzCN,EAAAC,EAAAC,cAAA,MAAIC,UAAU,aAAd,6BAEFH,EAAAC,EAAAC,cAAA,cACNF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,UACdH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WACFH,EAAAC,EAAAC,cAAA,SAAOK,KAAK,OAAOC,GAAG,OAAOvC,MAAOR,KAAKI,MAAMC,gBAE5DkC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,UACdH,EAAAC,EAAAC,cAAA,SAAOO,YAAY,KAAKC,YAAY,KACpCV,EAAAC,EAAAC,cAAA,UACCF,EAAAC,EAAAC,cAAA,UAAIF,EAAAC,EAAAC,cAAA,UAAQS,MAAOf,EAAMgB,QAAUnD,KAAKY,cAApC,OACJ2B,EAAAC,EAAAC,cAAA,UAAIF,EAAAC,EAAAC,cAAA,UAAQS,MAAOf,EAAMgB,QAAWnD,KAAKa,aAArC,MACJ0B,EAAAC,EAAAC,cAAA,UAAIF,EAAAC,EAAAC,cAAA,UAAQS,MAAOf,EAAMgB,QAASnD,KAAKc,YAAnC,QACJyB,EAAAC,EAAAC,cAAA,UAAIF,EAAAC,EAAAC,cAAA,UAAQS,MAAQf,EAAMgB,QAAS,kBAAIjB,EAAKkB,iBAAiB,OAAzD,OAELb,EAAAC,EAAAC,cAAA,UACCF,EAAAC,EAAAC,cAAA,UAAIF,EAAAC,EAAAC,cAAA,UAAQS,MAAOZ,EAAOa,QAAS,kBAAIjB,EAAKmB,WAAW,KAAnD,MACJd,EAAAC,EAAAC,cAAA,UAAIF,EAAAC,EAAAC,cAAA,UAAQS,MAAOZ,EAAOa,QAAS,kBAAIjB,EAAKmB,WAAW,KAAnD,MACJd,EAAAC,EAAAC,cAAA,UAAIF,EAAAC,EAAAC,cAAA,UAAQS,MAAOZ,EAAOa,QAAS,kBAAIjB,EAAKmB,WAAW,KAAnD,MACJd,EAAAC,EAAAC,cAAA,UAAIF,EAAAC,EAAAC,cAAA,UAAQS,MAAO,CAACd,gBAAkB,WAAYe,QAAS,kBAAIjB,EAAKkB,iBAAiB,OAAjF,OAELb,EAAAC,EAAAC,cAAA,UACCF,EAAAC,EAAAC,cAAA,UAAIF,EAAAC,EAAAC,cAAA,UAAQS,MAAOZ,EAAOa,QAAS,kBAAKjB,EAAKmB,WAAW,KAApD,MACJd,EAAAC,EAAAC,cAAA,UAAIF,EAAAC,EAAAC,cAAA,UAAQS,MAAOZ,EAAOa,QAAS,kBAAMjB,EAAKmB,WAAW,KAArD,MACJd,EAAAC,EAAAC,cAAA,UAAIF,EAAAC,EAAAC,cAAA,UAAQS,MAAOZ,EAAOa,QAAS,kBAAKjB,EAAKmB,WAAW,KAApD,MACJd,EAAAC,EAAAC,cAAA,UAAIF,EAAAC,EAAAC,cAAA,UAAQS,MAAO,CAACd,gBAAkB,WAAYe,QAAS,kBAAMjB,EAAKkB,iBAAiB,OAAnF,OAELb,EAAAC,EAAAC,cAAA,UACCF,EAAAC,EAAAC,cAAA,UAAIF,EAAAC,EAAAC,cAAA,UAAQS,MAAOZ,EAAOa,QAAS,kBAAKjB,EAAKmB,WAAW,KAApD,MACJd,EAAAC,EAAAC,cAAA,UAAIF,EAAAC,EAAAC,cAAA,UAAQS,MAAOZ,EAAOa,QAAS,kBAAKjB,EAAKmB,WAAW,KAApD,MACJd,EAAAC,EAAAC,cAAA,UAAIF,EAAAC,EAAAC,cAAA,UAAQS,MAAOZ,EAAOa,QAAS,kBAAKjB,EAAKmB,WAAW,KAApD,MACJd,EAAAC,EAAAC,cAAA,UAAIF,EAAAC,EAAAC,cAAA,UAAQS,MAAO,CAACd,gBAAkB,WAAYe,QAAS,kBAAKjB,EAAKkB,iBAAiB,OAAlF,OAELb,EAAAC,EAAAC,cAAA,UACCF,EAAAC,EAAAC,cAAA,UAAIF,EAAAC,EAAAC,cAAA,UAAQS,MAAO,CAACd,gBAAiB,OAAQkB,MAAQ,MAAOH,QAAS,kBAAMjB,EAAKmB,WAAW,KAAvF,MACJd,EAAAC,EAAAC,cAAA,UAAIF,EAAAC,EAAAC,cAAA,UAAQS,MAAOZ,EAAOa,QAASnD,KAAKS,UAApC,MACJ8B,EAAAC,EAAAC,cAAA,UAAIF,EAAAC,EAAAC,cAAA,UAAQU,QAAS,kBAAKjB,EAAKkB,iBAAiB,OAA5C,mBAxKSG,cCMZC,EAAcC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DAsCN,SAASC,EAAgBC,GACvBC,UAAUC,cACPC,SAASH,GACTI,KAAK,SAAAC,GACJA,EAAaC,cAAgB,WAC3B,IAAMC,EAAmBF,EAAaG,WACtCD,EAAiBE,cAAgB,WACA,cAA3BF,EAAiBlE,QACf4D,UAAUC,cAAcQ,WAK1BC,QAAQC,IAAI,6CAKZD,QAAQC,IAAI,2CAMrBC,MAAM,SAAAC,GACLH,QAAQG,MAAM,4CAA6CA,KCzEjEC,IAASC,OACPxC,EAAAC,EAAAC,cAACuC,EAAD,MACCC,SAASC,eAAe,SDYZ,WACb,GAA6C,kBAAmBlB,UAAW,CAGzE,GADkB,IAAImB,IAAIC,GAAwB1B,OAAOC,UAC3C0B,SAAW3B,OAAOC,SAAS0B,OAIvC,OAGF3B,OAAO4B,iBAAiB,OAAQ,WAC9B,IAAMvB,EAAK,GAAAwB,OAAMH,GAAN,sBAEP5B,GAiDV,SAAiCO,GAE/ByB,MAAMzB,GACHI,KAAK,SAAAsB,GAGkB,MAApBA,EAASC,SACuD,IAAhED,EAASE,QAAQC,IAAI,gBAAgBxE,QAAQ,cAG7C4C,UAAUC,cAAc4B,MAAM1B,KAAK,SAAAC,GACjCA,EAAa0B,aAAa3B,KAAK,WAC7BT,OAAOC,SAASoC,aAKpBjC,EAAgBC,KAGnBa,MAAM,WACLF,QAAQC,IACN,mEArEAqB,CAAwBjC,GAIxBC,UAAUC,cAAc4B,MAAM1B,KAAK,WACjCO,QAAQC,IACN,+GAMJb,EAAgBC,MCvCxBkC,sBCTAC,EAAAC,QAAiBC,EAAAC,EAAuB","file":"static/js/main.e63392ba.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport logo from './logo.svg';\nimport './App.css';\n\nclass App extends Component {\n    \n    constructor(props){\n        super(props);\n        this.inputDot=this.inputDot.bind(this);\n        this.clearDisplay=this.clearDisplay.bind(this);\n        this.showPercent=this.showPercent.bind(this);\n        this.changeSign=this.changeSign.bind(this);\n    }\n\n    state = {\n\t\tdisplayValue: '0',\n\t\twaitingForOperator: false ,\n\t\toperator: null,\n\t\tvalue: null\n\t}\n\n\nclearDisplay(){\n\tthis.setState({\n\t\tdisplayValue:'0'\n\t})\n}\ninputDigit(digit)\n{\n\tconst { displayValue ,waitingForOperator}=this.state\n\n\tif(waitingForOperator)\n\t{\n\t\tthis.setState({\n\t\t\tdisplayValue : String(digit),\n\t\t\twaitingForOperator: false\n\t\t})\n\t}else\n\t\t{\n\t\tthis.setState({\n\t\t\tdisplayValue : displayValue === '0' ? String(digit) : displayValue+digit\n\t\t})\n\t}\n}\n\ninputDot(){\n\tconst { displayValue , waitingForOperator}=this.state\n\tif(waitingForOperator)\n\t{\n\t\tthis.setState({\n\t\t\tdisplayValue: '.',\n\t\t\twaitingForOperator: false\n\t\t})\n\t}\n\n\telse if (displayValue.indexOf('.')=== -1)\n\t{\n\t\tthis.setState({\n\t\t\tdisplayValue : displayValue + '.'\n\t\t})\t\n\t}\n\t\n}\nchangeSign(){\n\tconst {displayValue}=this.state\n\tthis.setState({\n\t\tdisplayValue : displayValue.charAt(0)=== '-' ? displayValue.substr(1) : '-'+displayValue\n\t})\n}\nshowPercent()\n{\n\tconst{displayValue}=this.state\n\tconst value = parseFloat(displayValue)\n\tthis.setState({\n\t\tdisplayValue : value/100\n\t})\n}\nperformOperation(nextoperator)\n{\n\tconst { displayValue ,operator,value}= this.state\n\tconst nextValue = parseFloat(displayValue)\n\tconst operations = {\n\t\t'+':(prevValue,nextValue) => prevValue+nextValue,\n\t\t'-':(prevValue,nextValue) => prevValue-nextValue,\n\t\t'*':(prevValue,nextValue) => prevValue*nextValue,\n\t\t'/':(prevValue,nextValue) => prevValue/nextValue,\n\t\t'=':(prevValue,nextValue) => nextValue,\n\n\t}\n\t\n\t//const operatedValue = operations[operator](prevValue,nextValue)\n\tif(value==null)\n\t{\n\t\tthis.setState({\n\t\t\tvalue:nextValue\n\t\t})\n\t}\n    else if(operator)\n\t{\n        \n\t\tconst currentValue = value || 0\n\t\tconst newValue = operations[operator](currentValue,nextValue)\n\n\t\tthis.setState({\n\t\t\tvalue:newValue,\n\t\t\tdisplayValue:String(newValue)\n\t\t})\n\t}\n\tthis.setState({\n\t\twaitingForOperator : true,\n\t\toperator:nextoperator,\n\n\t})\n}\n\n    \n  render() {\n      \n      //const{displayValue}=this.state\n      \n      var butn={\n        backgroundColor:\"#707070\",\n        color : \"#000\"\n    };\n    var butn1 = {\n        backgroundColor:\"#707070\",\n\t};\n\t/*\n    var butn2 = {\n        backgroundColor : \"#FFA500\"\n\t};\n\t*/\n    return (\n      <div className=\"App\">\n        <header className=\"App-header\">\n          <img src={logo} className=\"App-logo\" alt=\"logo\" />\n          <h1 className=\"App-title\">Welcome to My Calculator</h1>\n        </header>\n        <center>\n\t\t<div className=\"layout\">\n\t\t\t<div className=\"display\">\n                <input type=\"text\" id=\"text\" value={this.state.displayValue} />\n\t\t\t</div>\n\t\t\t<div className=\"numpad\">\n\t\t\t\t<table cellspacing=\"10\" cellpadding=\"5\">\n\t\t\t\t<tr>\n\t\t\t\t\t<td><button style={butn} onClick ={this.clearDisplay}>AC</button></td>\n\t\t\t\t\t<td><button style={butn} onClick = {this.showPercent}>%</button></td>\n\t\t\t\t\t<td><button style={butn} onClick={this.changeSign}>+/-</button></td>\n\t\t\t\t\t<td><button style= {butn} onClick={()=>this.performOperation('/')}>/</button></td>\n\t\t\t\t</tr>\n\t\t\t\t<tr>\n\t\t\t\t\t<td><button style={butn1} onClick={()=>this.inputDigit(7)}>7</button></td>\n\t\t\t\t\t<td><button style={butn1} onClick={()=>this.inputDigit(8)}>8</button></td>\n\t\t\t\t\t<td><button style={butn1} onClick={()=>this.inputDigit(9)}>9</button></td>\n\t\t\t\t\t<td><button style={{backgroundColor : \"#FFA500\"}} onClick={()=>this.performOperation('*')}>x</button></td>\n\t\t\t\t</tr>\n\t\t\t\t<tr>\n\t\t\t\t\t<td><button style={butn1} onClick={()=> this.inputDigit(4)}>4</button></td>\n\t\t\t\t\t<td><button style={butn1} onClick={() => this.inputDigit(5)}>5</button></td>\n\t\t\t\t\t<td><button style={butn1} onClick={()=> this.inputDigit(6)}>6</button></td>\n\t\t\t\t\t<td><button style={{backgroundColor : \"#FFA500\"}} onClick={() => this.performOperation('-')}>-</button></td>\n\t\t\t\t</tr>\n\t\t\t\t<tr>\n\t\t\t\t\t<td><button style={butn1} onClick={()=> this.inputDigit(3)}>3</button></td>\n\t\t\t\t\t<td><button style={butn1} onClick={()=> this.inputDigit(2)}>2</button></td>\n\t\t\t\t\t<td><button style={butn1} onClick={()=> this.inputDigit(1)}>1</button></td>\n\t\t\t\t\t<td><button style={{backgroundColor : \"#FFA500\"}} onClick={() =>this.performOperation('+')}>+</button></td>\n\t\t\t\t</tr>\n\t\t\t\t<tr>\n\t\t\t\t\t<td><button style={{backgroundColor: \"grey\" ,width : \"50\"}} onClick={() => this.inputDigit(0)}>0</button></td>\n\t\t\t\t\t<td><button style={butn1} onClick={this.inputDot}>.</button></td>\n\t\t\t\t\t<td><button onClick={() =>this.performOperation('=')}>=</button></td>\n\t\t\t\t</tr>\n\t\t\t\t</table>\n\t\t\t</div>\n\t\t</div>\n\t</center>\n\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport registerServiceWorker from './registerServiceWorker';\n\nReactDOM.render(\n  <App />,\n   document.getElementById('root'));\nregisterServiceWorker();\n","module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";"],"sourceRoot":""}